<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>systems on Michael Hedgpeth</title><link>https://hedge-ops.com/tags/systems/</link><description>Recent content in systems on Michael Hedgpeth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>MIT</copyright><lastBuildDate>Mon, 14 Jul 2014 08:05:46 +0000</lastBuildDate><atom:link href="https://hedge-ops.com/tags/systems/index.xml" rel="self" type="application/rss+xml"/><item><title>Immunity</title><link>https://hedge-ops.com/immunity/</link><pubDate>Mon, 14 Jul 2014 08:05:46 +0000</pubDate><guid>https://hedge-ops.com/immunity/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-immunity.jpg" alt="Immunity" />
&lt;/div>
&lt;p>We finally figured out a bedtime routine.&lt;/p>
&lt;p>But the kids were late to school every day.&lt;/p>
&lt;p>We figured out how to sit down every night for dinner.&lt;/p>
&lt;p>But we were spending too much on groceries.&lt;/p>
&lt;p>It&amp;rsquo;s a reality we all face: no matter what you do, &lt;a href="https://hedge-ops.com/failure-the-catalyst/">some other problem comes up to wreck everything&lt;/a>. And the same was true for my project that was dedicated to improving the quality of our software.&lt;/p>
&lt;p>When we started, we focused mainly on making sure there was no problem with how an order was created, the receipt was printed, and the financials were calculated. We had prioritized this correctly; getting these three things right is critical to our success.&lt;/p>
&lt;p>Once we had ramped up our solution, we saw a &lt;em>lot&lt;/em> of problems that we were able to catch before shipping our latest releases to anyone. We saved ourselves and our customers a lot of headaches that our competitors and their customers were likely suffering through.&lt;/p>
&lt;p>But over time, those problems decreased and the system seems to now have an immunity to these types of issues. It&amp;rsquo;s not a phenomenon I totally understand, but is one I&amp;rsquo;ve heard of from others in the industry.&lt;/p>
&lt;p>Our newfound immunity also hadn&amp;rsquo;t made us immune to &lt;em>every&lt;/em> problem. The problems we &lt;em>weren&amp;rsquo;t&lt;/em> focused on were still there.&lt;/p>
&lt;p>We hadn&amp;rsquo;t focused on how software is installed at the site and that the correct environment was set up. So the software could be rock solid, but if the environment is off, we&amp;rsquo;re in trouble. It will likely never end, but it&amp;rsquo;s a fun journey to iteratively create immunity through automation in the system.&lt;/p>
&lt;p>My advice with problem solving is &lt;strong>create a system that makes you immune to having the problem again.&lt;/strong> So get a month ahead of income so you never overdraft. Or put all your bills on autopay so you never miss one. Or every Friday take your spouse out for dinner. &lt;strong>But don&amp;rsquo;t expect all problems to go away entirely.&lt;/strong> Keep working at it, and you&amp;rsquo;ll grow beyond where you imagined, solving problems you didn&amp;rsquo;t even think you were capable of taking on. It&amp;rsquo;s a wonderful journey.&lt;/p></description></item><item><title>Safety Net</title><link>https://hedge-ops.com/safety-net/</link><pubDate>Fri, 06 Jun 2014 08:00:33 +0000</pubDate><guid>https://hedge-ops.com/safety-net/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-safety-net.jpg" alt="Failure Safety Net" />
&lt;/div>
&lt;p>Late last year I began seriously working on improving how we deliver updates to our software to restaurants. One of the most interesting parts about my job is how many aspects of technology become incredibly difficult when you have a chef twenty feet away instead of a data center technician in a lab coat. Updates are no exception: the operation of the restaurant itself is at stake and we must get it right.&lt;/p>
&lt;p>So how do you improve something like that? Believe me, this was something that was keeping me up at night. The problem is the huge amount of risk involved in anything going wrong in the restaurant operations, but at the same time the huge operational benefit improving it.&lt;/p>
&lt;p>The insight we found was that &lt;em>before making a change that has risk, build a safety net to ensure that the change will have the desired effect&lt;/em>. &lt;strong>Build quality into the system, and you&amp;rsquo;ll be able to make the needed changes to the system.&lt;/strong> Otherwise, you&amp;rsquo;re dead when the first problem hits and you&amp;rsquo;ll never recover.&lt;/p>
&lt;p>This insight relates to so many areas of life and business:&lt;/p>
&lt;div class="table-responsive">
&lt;table style="width:100%; " class="table" border="0">
&lt;tr>
&lt;th >
When doing
&lt;/th>
&lt;pre>&lt;code> &amp;lt;th &amp;gt;
create safety with
&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
Software development
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
automated unit and integration tests
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A budget
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
&amp;lt;a href=&amp;quot;http://www.youneedabudget.com/method/rule-four&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;living on last month's income&amp;lt;/a&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A healthy marriage
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
going on a date and having fun together
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A college class
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
a study group
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A business idea
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
seeing if it can be profitable on the side
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&lt;/code>&lt;/pre>
&lt;/table>
&lt;/div>
&lt;p>A safety net is a critical aspect of any system I create today. The bigger the risk involved, the more I strive to include saftey in the solution we create.&lt;/p>
&lt;p>What safety nets have you created in your solutions? Have you ever created &lt;em>too much&lt;/em> of a safety net?&lt;/p></description></item></channel></rss>