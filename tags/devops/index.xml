<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>devops on Michael Hedgpeth</title><link>https://hedge-ops.com/tags/devops/</link><description>Recent content in devops on Michael Hedgpeth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>MIT</copyright><lastBuildDate>Wed, 09 May 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://hedge-ops.com/tags/devops/index.xml" rel="self" type="application/rss+xml"/><item><title>I Was Told to write this blog post</title><link>https://hedge-ops.com/i-was-told/</link><pubDate>Wed, 09 May 2018 00:00:00 +0000</pubDate><guid>https://hedge-ops.com/i-was-told/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-i-was-told.jpg" alt="I Was Told" />
&lt;/div>
&lt;p>A lot of times in IT I&amp;rsquo;ll hear the phrase, &amp;ldquo;I was told&amp;rdquo;. For example, &amp;ldquo;I was told we are going to use Chef.&amp;rdquo; This is the worst possible phrase you can use. It suffers from two major defects:&lt;/p>
&lt;p>First it uses the &lt;em>passive voice&lt;/em>. I think the passive voice is the enemy of productive and clear communication. In this context the passive voice shadows the listener from the person that did the telling and subtly tells you to not question the statement.&lt;/p>
&lt;p>&amp;ldquo;I was told to use Chef.&amp;rdquo; Who did the telling? Your mom? Your five year old son? Your boss? &lt;em>Their&lt;/em> boss? The teller implies that it doesn&amp;rsquo;t matter; you should just accept the statement because, &amp;ldquo;I was told&amp;rdquo;!&lt;/p>
&lt;p>But this isn&amp;rsquo;t the worst part of the statement.&lt;/p>
&lt;p>&lt;em>I was told&lt;/em> takes the teller completely out of the chain of responsibility for actions and results in their business. If &lt;em>I was told to do Chef&lt;/em> and it doesn&amp;rsquo;t go well, then that&amp;rsquo;s not my fault at all. I can go about my career life with great pride in the fact that I&amp;rsquo;m only doing what I&amp;rsquo;m told and can chalk up failures to &lt;em>management&lt;/em> or &lt;em>the crazy Chef evangelist&lt;/em>.&lt;/p>
&lt;p>&lt;em>I was told&lt;/em> needs to die. It&amp;rsquo;s the death knell of a career. It lulls its teller into a rejection of responsibility, and their skills fade away into oblivion.&lt;/p>
&lt;p>Here&amp;rsquo;s a secret: even though I wrote that on the Internet for the &lt;em>whole world to hear&lt;/em>, you&amp;rsquo;re going to go to work tomorrow and hear &lt;em>I was told&lt;/em>. It will be like the car that you buy and then see it everywhere. Everyone using the passive voice! Obfuscating the actions of others into an unquestionable force that we should all follow!&lt;/p>
&lt;p>And as that happens, I have some advice for you. Take charge. See what needs to change and change it. Call out a problem, suggest a solution, and solve it. Don&amp;rsquo;t complain about funding. Don&amp;rsquo;t complain about the other team that is stupid. Don&amp;rsquo;t complain about management and &lt;em>I was told&lt;/em> yourself into oblivion.&lt;/p>
&lt;p>Stand up, take action, make the world a better place.&lt;/p></description></item><item><title>The Power of Context</title><link>https://hedge-ops.com/power-of-context/</link><pubDate>Wed, 25 Apr 2018 00:00:00 +0000</pubDate><guid>https://hedge-ops.com/power-of-context/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-power-of-context.jpg" alt="Power of Context" />
&lt;/div>
&lt;p>I&amp;rsquo;ve coached a couple of people lately who have made a career change into technology from other disciplines and have noticed a pattern emerge that I want to share more broadly.&lt;/p>
&lt;p>People from other disciplines bring diversity to their roles. In this context, we&amp;rsquo;re not talking about their gender or ethnicity. We&amp;rsquo;re talking about their &lt;em>background&lt;/em>. From a purely business perspective, we want higher diversity and inclusion to remove the efficiency barriers that exist from the echo chamber that is generated from only having one group present. If a disproportionate amount of women were in technology, that same echo chamber would exist and we would want to hire more men. Same with all other groups.&lt;/p>
&lt;p>With that in mind, people we hire onto our teams that are in underrerpresented groups or lack the traditional indoctrination of the culture of IT through universities (i.e., are making a career change) have special powers. They can see things the rest of us can&amp;rsquo;t. They work around the echo chamber and can truly be powerful.&lt;/p>
&lt;p>Because these people generally lack deep technical skills, they experience immense temptation to get outside of a technical role and into a &amp;ldquo;better fit&amp;rdquo;. After all, if a new DevOps Engineer is growing and only OK at coding Ansible scripts, but is removing barriers left and right on getting a critical project delivered, why not let her focus on the latter?&lt;/p>
&lt;p>This would be a huge mistake. Don&amp;rsquo;t do it. Stay technical.&lt;/p>
&lt;p>Here&amp;rsquo;s the secret: when people have the technical &lt;em>context&lt;/em> within which they can solve human and technical problems together, their value shoots through the roof.&lt;/p>
&lt;p>If you walk away from opportunities to deepen your technical skills in an effort to maximize your value, you&amp;rsquo;re making a huge short-sighted mistake. Without those technical skills, you won&amp;rsquo;t be able to as effectively lead in the future. You&amp;rsquo;ll be a &lt;em>passenger&lt;/em> in the software value creation process. Passengers in this process don&amp;rsquo;t get compensation, respect, and rewards equal to the &lt;em>drivers&lt;/em>, or producers (unless they are in sales, which is another kind of producer).&lt;/p>
&lt;p>Let me leave you with an example, used by permission from my wife. I and many people who know her think that Annie will be a high performing IT executive in five years. She&amp;rsquo;s got all the intangibles you need to be a VP Engineering. In order to get there, though, she needs to dive into her Chef projects for her customer, continue to build her technical skills by learning Ruby deeply, and continue to build her technical prowess. Without that, she would probably stall out and lack the direct engagement that is needed for effective executive-level management.&lt;/p>
&lt;p>So if you&amp;rsquo;re in the middle of a career change or are supporting people who are, don&amp;rsquo;t take the bait of getting a non-technical role early on. Build off of technical proficiency paired with the soft skills. Let them grow together. With that context, you&amp;rsquo;re truly on the path to long-term success.&lt;/p></description></item><item><title>2017 Year in Review</title><link>https://hedge-ops.com/2017-year-end/</link><pubDate>Wed, 17 Jan 2018 00:00:00 +0000</pubDate><guid>https://hedge-ops.com/2017-year-end/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-2017-year-end.jpg" alt="Year End" />
&lt;/div>
&lt;p>At the start of 2018, &lt;a href="http://www.anniehedgie.com">Annie&lt;/a> and I feel like we&amp;rsquo;re at the start of a brand new journey. We&amp;rsquo;ve decided to move to Boulder, Colorado in the coming months. Our jobs are going great, so we plan on working remotely with our companies after making the move. We&amp;rsquo;re both very excited about what&amp;rsquo;s in store; every time I go to the mountains I come alive in a way that no other place can match.&lt;/p>
&lt;p>Before moving onto this next chapter, I wanted to write about some of the great things that have happened in 2017.&lt;/p>
&lt;p>On the automation front, we&amp;rsquo;ve settled on an automation stack that works for us using Chef, RunDeck, ARM Templates, Hashicorp Vault, Artifactory, and Salt. I abandoned my &lt;a href="https://hedge-ops.com/introducing-cafe/">experimental Cafe project&lt;/a> when I realized Chef was going in another direction. While that was painful to give up, I got to scratch a coding itch and realize that it was really up to me (and not a single vendor) to build the stack that solved our problems. After finalizing this approach to automation, I was able to build alignment with our central IT partners within NCR and make this our reference architecture going forward as we migrate some workloads to the cloud. It&amp;rsquo;s all very exciting and really a culmination of years of work and lots of great partnership with Chef, Inc. especially.&lt;/p>
&lt;p>At work in July I took on a new challenge to migrate our critical applications to a new hardware platform that would help us grow our business. It was a unique challenge for me because we wanted to move our critical applications to this platform before our peak season which started mid-November. So much of the second half of the year I became obsessed with delivering this project. It had no &amp;ldquo;devops&amp;rdquo; associated with it, or code, or any of that. However, I loved it. I enjoyed rising to the challenge, bringing a lot of different departments together and delivering the project. Our peak season has been one of the most stable and successful yet for the critical applications we migrated, and that&amp;rsquo;s thanks to our efforts.&lt;/p>
&lt;p>In August we had a successful DevOps Days in Dallas. I was really proud of two things: first, we put together a leadership summit that attracted forty of Dallas&amp;rsquo; devops-minded IT leaders. I really enjoyed being in that group and thinking about DevOps from a strategic/leadership perspective. I was also proud of how well my friend &lt;a href="https://twitter.com/MeganBohl">Megan Bohl&lt;/a> did as a sponsor liason and that we were able to get her a scholarship to &lt;a href="https://www.techtalentsouth.com/">Tech Talent South&lt;/a>. Stay tuned with Megan; she&amp;rsquo;s going to be a star.&lt;/p>
&lt;p>This past year I was also impressed with Annie&amp;rsquo;s growth. She started the year only a few months into the job and very much struggling to put it all together and get herself on billable jobs. It felt at the beginning of the year like she was battling uphill for success in the industry. And along the way there were lots of people (don&amp;rsquo;t worry, we&amp;rsquo;re not mad at you) who suggested that Annie should be in a non-technical role.&lt;/p>
&lt;p>Instead of giving up, Annie dug in and studied hard. When the opportunities came, she worked extra and I watched the kids. She got help wherever she could get it. In May she got a particularly challenging make-it-or-break-it project, and her colleague Scott Nowicki spent time after hours walking her through the challenges she was having so she could deliver. That was a huge turning point for her.&lt;/p>
&lt;p>Another huge turning point was when her CEO helped her realize that if she wanted to be technical, she needed to &lt;em>focus&lt;/em> on that and stop speaking, blogging, marketing so much. That was the absolute right advice she needed right then. A lot of people would see her talents and say &amp;ldquo;you should be blogging!&amp;rdquo; but then ignore the technical skills that were growing so rapidly.&lt;/p>
&lt;p>Which reminds me of a third turning point for me personally. At DevOps Days, after our speaker dinner, Adam Jacob and John Willis heard our story and they both remarked at how unusually talented Annie is as a technologist. I must admit I had become blind to that reality because I had spent the last year working with her at the edge of her abilities. But the truth was evident: it&amp;rsquo;s not normal going from nothing to knowing InSpec in two weeks enough to write tutorials on it. It&amp;rsquo;s not normal to accomplish what she has accomplished, because, frankly, she&amp;rsquo;s good at it. She&amp;rsquo;s abnormally good. She has the potential to be a technical game changer for a valuable business. That makes me so glad she&amp;rsquo;s stayed on the path she&amp;rsquo;s on as a technologist.&lt;/p>
&lt;p>Late in the year Annie started working on a long-term contract with a company to help them with their Chef and Azure workloads. She&amp;rsquo;s integrated InSpec into their workflow and has done so much more than that. She loves finding the &amp;ldquo;right&amp;rdquo; way that aligns with the business objectives and challenges. I can&amp;rsquo;t wait to see how much she&amp;rsquo;s able to accomplish there in the coming months.&lt;/p>
&lt;p>It has been an amazing journey to see Annie transform like this. Years ago I&amp;rsquo;d come home from work and she would be taking wood from the side of the road and turn it into something beautiful and useful. It&amp;rsquo;s amazing to see her be able to transform those skills and that work ethic into a fantastic technical engineering position. And this is only the beginning!&lt;/p>
&lt;p>Next year I&amp;rsquo;m going to focus on two things:&lt;/p>
&lt;p>First I&amp;rsquo;m going to move to Boulder and find my place in that community. There are a lot of differences between Dallas and Boulder and I&amp;rsquo;m hopeful that I can fit in. I&amp;rsquo;m there for more personal reasons: I want to bike everywhere, I want to live in a smaller place, and I want to hike up mountains. I would also love to snow ski for the first time. Moving to Boulder really is a dream come true!&lt;/p>
&lt;p>Second, next year I&amp;rsquo;ll be focusing more on the broader elements of our DevOps transformation journey at NCR. I am looking forward to influencing our growth and transformation beyond just code and automation improvements. I want to dramatically improve what we do and what we can do. I&amp;rsquo;m more excited than ever about the new challenges before me.&lt;/p>
&lt;p>I don&amp;rsquo;t think there will ever be another 2017 for Annie and me. It was a year of dramatic growth for both of us. We started the year both not quite sure about our futures, but finish off as valuable contributors of our companies and so happy about how we are both growing. My mantra has always been to go for growth first and everything else will follow. That&amp;rsquo;s where I feel we both are at, and I&amp;rsquo;m thrilled to see where this takes us.&lt;/p>
&lt;p>And finally, thanks to everyone who have supported us along the way. We couldn&amp;rsquo;t have done what we did without you. You know who you are, and believe us, we are so incredibly grateful for your support, friendship, and love.&lt;/p></description></item><item><title>Your First DevOps Project</title><link>https://hedge-ops.com/devops-project/</link><pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate><guid>https://hedge-ops.com/devops-project/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-devops-project.jpg" alt="Devops Project" />
&lt;/div>
&lt;p>I was at lunch with my friend &lt;a href="https://twitter.com/MeganBohl">Megan Bohl&lt;/a> who is a fellow &lt;a href="https://www.devopsdays.org/events/2018-dallas/">DevOps Days Organizer&lt;/a>, and is taking a DevOps course with &lt;a href="https://www.techtalentsouth.com/">Tech Talent South&lt;/a>. Megan is finishing her course in a few weeks and is ready to go find a DevOps job. However, like many people learning about this stuff for the first time, Megan wants to bring everything together into a nice project.&lt;/p>
&lt;p>Before lunch, I spoke with Megan and her class about how it&amp;rsquo;s necessary to know the context and problems that different technologies address in order to properly understand and properly be prepared for a DevOps Engineering position. So with that in mind, I&amp;rsquo;ll propose a project that Megan and anyone can do to get a basic feel for what DevOps is all about. Hopefully this can be used by a lot of people to get their feet wet with DevOps automation tools.&lt;/p>
&lt;p>If you want to follow along in the project, please do it in order. Don&amp;rsquo;t skip any steps. And if you get to a point where you&amp;rsquo;re thinking &amp;ldquo;I don&amp;rsquo;t know anything about git!&amp;rdquo; or whatever, have no fear. Stop, spend some time on learning git, and then keep going. You can do this project without any previous technology experience, assuming you have someone helping you look in the right places. And that&amp;rsquo;s the final thing: use this as a guide to get you on your way but find a technical friend to sponsor your learning and interact with you. That will be huge.&lt;/p>
&lt;p>We&amp;rsquo;ll deliver the project in phases:&lt;/p>
&lt;h1 id="phase-1-simple-website">Phase 1: Simple Website&lt;/h1>
&lt;ol>
&lt;li>Create an account on &lt;a href="GitHub">https://github.com/&lt;/a>&lt;/li>
&lt;li>Create a repository named &lt;code>website&lt;/code> on GitHub&lt;/li>
&lt;li>Clone your &lt;code>website&lt;/code> repository locally using your terminal (&lt;code>Terminal&lt;/code> on a mac or &lt;code>PowerShell&lt;/code> on windows).&lt;/li>
&lt;li>Create a branch called &lt;code>feature_index&lt;/code>&lt;/li>
&lt;li>Add an &lt;code>index.html&lt;/code> to the branch that says &lt;code>Hello, World!&lt;/code> in the text. You&amp;rsquo;ll want to make the change with &lt;a href="https://code.visualstudio.com/">Visual Studio Code&lt;/a>&lt;/li>
&lt;li>Check that in&lt;/li>
&lt;li>Create a pull request for your branch to be merged into &lt;code>master&lt;/code> and assign the pull request to your mentor. If you don&amp;rsquo;t have a mentor, assign it to me, &lt;code>mhedgpeth&lt;/code>! :)&lt;/li>
&lt;li>Merge your pull request into &lt;code>master&lt;/code> after it&amp;rsquo;s approved&lt;/li>
&lt;/ol>
&lt;h2 id="what-were-learning">What We&amp;rsquo;re Learning&lt;/h2>
&lt;p>In order to work well with DevOps automation and tooling, you need to know the basics about source control and editing code. This gives you that foundation. It also gives us something to deploy in future phases.&lt;/p>
&lt;h2 id="resources-for-phase-1">Resources for Phase 1&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://try.github.io/levels/1/challenges/1">Try Git in 15 minutes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://code.visualstudio.com/docs">Getting Started with Visual Studio Code&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.codecademy.com/learn/learn-html">Codecademy Learn HTML&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="phase-2-simple-webserver">Phase 2: Simple Webserver&lt;/h1>
&lt;p>Now that you have a website, you want to now create a webserver. This is a machine that will provide other machines the contents of your &lt;code>index.html&lt;/code> file from phase 1. This machine will be a linux machine hosted on &lt;a href="https://portal.azure.com">Microsoft Azure Cloud&lt;/a> with &lt;a href="https://www.nginx.com/">nginx&lt;/a> running on it.&lt;/p>
&lt;ol>
&lt;li>Create an account on Azure and activate your &lt;a href="https://azure.microsoft.com/en-us/offers/ms-azr-0044p/">free trial&lt;/a>&lt;/li>
&lt;li>Create an ubuntu virtual machine on Azure&lt;/li>
&lt;li>SSH to that machine. If you&amp;rsquo;re on windows use &lt;a href="http://www.hurryupandwait.io/blog/need-an-ssh-client-on-windows-dont-use-putty-or-cygwinuse-git">Matt Wrock&amp;rsquo;s guide&lt;/a> to getting a ssh client.&lt;/li>
&lt;li>&lt;a href="http://lmgtfy.com/?q=set+up+nginx+on+ubuntu">Set up nginx on the machine&lt;/a>&lt;/li>
&lt;li>Clone your git repository to &lt;code>/var/www/html&lt;/code> on the server&lt;/li>
&lt;li>Using the public ip assigned to your ubuntu server, access the website (i.e. &lt;code>http://[your-ip]&lt;/code>). Your website should show up.&lt;/li>
&lt;li>Have a friend on another computer do this. They should see the website too. Magical!&lt;/li>
&lt;/ol>
&lt;h2 id="what-were-learning-1">What We&amp;rsquo;re Learning&lt;/h2>
&lt;p>My friend Nathan Harvey has said to me that you can&amp;rsquo;t automate that which you do not understand. If you&amp;rsquo;re going to &amp;ldquo;do the DevOps&amp;rdquo; but can&amp;rsquo;t do it manually, then you&amp;rsquo;re going too fast! So we&amp;rsquo;re learning the basics here of setting up a machine.&lt;/p>
&lt;h2 id="resources-for-phase-2">Resources for Phase 2&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.microsoft.com/en-us/azure/virtual-machines/linux/quick-create-portal">Setting Up Linux Virtual Machine on Azure&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://tutorials.jenkov.com/nginx/index.html">Nginx Tutorial&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.howtogeek.com/howto/42980/the-beginners-guide-to-nano-the-linux-command-line-text-editor/">Nano Tutorial&lt;/a> for editing text files in an ssh session&lt;/li>
&lt;/ul>
&lt;h1 id="phase-3-deploy-a-change">Phase 3: Deploy a Change&lt;/h1>
&lt;p>Now it&amp;rsquo;s time to deploy a change! Let&amp;rsquo;s do this the old fashioned way the first time around.&lt;/p>
&lt;ol>
&lt;li>Create a new branch on your repository named &lt;code>feature_myname&lt;/code>.&lt;/li>
&lt;li>Update &lt;code>index.html&lt;/code> to say &amp;ldquo;Hello, Michael!&amp;rdquo;&lt;/li>
&lt;li>Create a pull request, get it reviewed, and merge it&lt;/li>
&lt;li>On your webserver, update your &lt;code>index.html&lt;/code> file from GitHub.&lt;/li>
&lt;li>Get on twitter and send me a message @michaelhedgpeth with a link. Show me that I didn&amp;rsquo;t waste my time! :)&lt;/li>
&lt;/ol>
&lt;h2 id="what-were-learning-2">What We&amp;rsquo;re Learning&lt;/h2>
&lt;p>This is how a majority of people have deployed things for a long time. The manual way. You can&amp;rsquo;t realize what problems different tools solve before you do it manually. I&amp;rsquo;m purposely not giving you the exact steps to follow because I want you to find those steps on your own or with a mentor. Google it! This is how you learn.&lt;/p>
&lt;h1 id="phase-4-create-a-chef-cookbook-to-automate-machine-setup">Phase 4: Create a Chef Cookbook to Automate Machine Setup&lt;/h1>
&lt;p>Now think about what your life would be like if you had to do the above steps thousands of times on hundreds of servers. Your life would not be fun, and in addition to that you would have hundreds of servers that were all a little bit different because, over time, you weren&amp;rsquo;t consistent. This is why you use something like Chef.&lt;/p>
&lt;p>This is a big technical jump from the previous phases. Take your time here. If you&amp;rsquo;ve never done this stuff you might spend a couple of weeks on it. You&amp;rsquo;ll have questions. Get on the &lt;a href="http://chefcommunity.slack.com">Chef Community Slack&lt;/a> and post them on the #general channel. Don&amp;rsquo;t be afraid; we all were here and support you!&lt;/p>
&lt;ol>
&lt;li>On GitHub create a repository called &lt;code>my_website&lt;/code>.&lt;/li>
&lt;li>Clone that repository locally and switch to a branch called &lt;code>feature_nginx&lt;/code>&lt;/li>
&lt;li>Set up &lt;code>nginx&lt;/code> using the &lt;a href="https://docs.chef.io/resource_package.html">package&lt;/a> resource&lt;/li>
&lt;li>Use &lt;a href="https://kitchen.ci/">Test Kitchen&lt;/a> to make sure your cookbook installs the package. Use kitchen with a &lt;a href="https://hedge-ops.com/policyfiles/">Policyfile&lt;/a>. There will be a &lt;code>Policyfile.rb&lt;/code> in the cookbook that defines your run list if you&amp;rsquo;re doing this right.&lt;/li>
&lt;li>Write an &lt;a href="http://www.anniehedgie.com/inspec/">Inspec Test&lt;/a> that ensures the package is installed&lt;/li>
&lt;li>Create a PR and get it merged&lt;/li>
&lt;li>Create another branch called &lt;code>feature_website&lt;/code>&lt;/li>
&lt;li>Using the &lt;a href="https://docs.chef.io/resource_git.html">git resource&lt;/a> clone your repository on GitHub&lt;/li>
&lt;li>Write another inspec test to make sure that the website is served when you go to &lt;code>http://localhost&lt;/code> and that the contents contain &amp;ldquo;Hello, Michael!&amp;rdquo;&lt;/li>
&lt;li>Make sure that &lt;code>kitchen test&lt;/code> works&lt;/li>
&lt;li>Create a Pull Request and Merge into master&lt;/li>
&lt;/ol>
&lt;h2 id="resources-for-phase-4">Resources for Phase 4&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://learn.chef.io/#/">Learn Chef Rally&lt;/a>. If you&amp;rsquo;re new to Chef, spend a lot of time here. Like days. Get through the basics and what I write above will make a lot more sense&lt;/li>
&lt;li>&lt;a href="https://hedge-ops.com/policyfiles/">My Policyfiles Post&lt;/a>. My description of that feature. Do yourself a favor and use it. It will simplify your life.&lt;/li>
&lt;li>&lt;a href="http://www.anniehedgie.com/inspec/">Annie&amp;rsquo;s InSpec Tutorials&lt;/a>. Still the best place on the internet to learn InSpec.&lt;/li>
&lt;/ul>
&lt;h1 id="phase-5-deploy-your-chef-cookbook-to-azure">Phase 5: Deploy Your Chef Cookbook to Azure&lt;/h1>
&lt;p>Now it&amp;rsquo;s time to use your Chef Cookbook as a way to not have to manually deploy and update your machine. After you do this step, you&amp;rsquo;ll be able to consistently create as many machines as you want, with very little effort!&lt;/p>
&lt;ol>
&lt;li>Create a new virtual machine on Azure using the portal&lt;/li>
&lt;li>Create an account and organization on &lt;a href="http://manage.chef.io">manage.chef.io&lt;/a>. If you did the learn chef rally above, you should already have this set up.&lt;/li>
&lt;li>Push your cookbook policy to the chef server (see my &lt;a href="https://hedge-ops.com/policyfiles/">blog post&lt;/a> for the exact command.&lt;/li>
&lt;li>&lt;a href="https://docs.chef.io/install_bootstrap.html">Bootstrap your node&lt;/a> with the chef server. This will run the policy on that node, setting up nginx and everything!&lt;/li>
&lt;li>Hit the public IP associated with the node and see that it serves your website perfectly! Magic!&lt;/li>
&lt;li>Now deploy a new change to your website and call it &amp;ldquo;Hello, Automated World!&amp;rdquo;. Tell me about it (@michaelhedgpeth on twitter). I&amp;rsquo;ll give you a high five for getting this far!&lt;/li>
&lt;/ol>
&lt;h2 id="what-were-learning-3">What We&amp;rsquo;re Learning&lt;/h2>
&lt;p>Hopefully you see the benefits of automating the setup of the machine. From now on, everything is consistent and just works. Your drama for making changes goes down. And you can do this as many times as it&amp;rsquo;s called for!&lt;/p>
&lt;h1 id="phase-6-automate-creation-of-vms-in-azure-with-terraform">Phase 6: Automate Creation of VMs in Azure with Terraform&lt;/h1>
&lt;p>Now that we have a Virtual Machine that we can easily set up, you might be tempted to quit. But there&amp;rsquo;s something lingering there: even though you automated what was &lt;em>inside&lt;/em> of the virtual machine, you still have to manually set up the machine itself. This is easy enough when you have one machine, but what if you have hundreds? That&amp;rsquo;s where Terraform comes in:&lt;/p>
&lt;ol>
&lt;li>Create a new repository in GitHub called &lt;code>website_provision&lt;/code>&lt;/li>
&lt;li>In that repo, create a terraform script that creates a virtual machine within a network with an external ip address&lt;/li>
&lt;li>Make your terraform script bootstrap the VM with your Chef Server and assign it to your policy&lt;/li>
&lt;li>Wath with awe how terraform allows you to create and destroy your &lt;em>entire&lt;/em> stack, all the way from the machines itself to what&amp;rsquo;s on the machines (with Chef).&lt;/li>
&lt;/ol>
&lt;h2 id="what-were-learning-4">What We&amp;rsquo;re Learning&lt;/h2>
&lt;p>The environment within which your application runs is one of the most complicated aspecs of the application. Thus, you should invest in automating that and keeping yourself away from the user interface. Terraform is a great tool for this.&lt;/p>
&lt;h2 id="phase-6-resources">Phase 6 Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.terraform.io/intro/index.html">Terraform Resources&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/docs/providers/azurerm/">Azure Terraform Provider&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/terraform-providers/terraform-provider-azurerm/tree/master/examples">Azure Terraform Examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="phase-7-workflow-automation-with-jenkins">Phase 7: Workflow Automation with Jenkins&lt;/h1>
&lt;p>Now that we have an automated process that will deploy our stuff, we want to make our workflow easy to execute with Jenkins. Before you move on I highly recommend Wes Higbee&amp;rsquo;s &lt;a href="https://www.pluralsight.com/courses/jenkins-2-getting-started">Jenkins class on Pluralsight&lt;/a>. It&amp;rsquo;s well worth the trouble. That will give you the context you need to go through these steps:&lt;/p>
&lt;ol>
&lt;li>Create a rakefile for your &lt;code>my_website&lt;/code> cookbook using [my blog post])(&lt;a href="http://hedge-ops.com/cookbook-development-with-rakefile/">http://hedge-ops.com/cookbook-development-with-rakefile/&lt;/a>) as a guide.&lt;/li>
&lt;li>Create a &lt;code>Jenkinsfile&lt;/code> for your cookbook using &lt;a href="http://hedge-ops.com/cookbook-pipeline-with-jenkinsfile/">my blog post&lt;/a> as a guide&lt;/li>
&lt;li>Create a Jenkins server. If you took the class you may already have one.&lt;/li>
&lt;li>Create a Jenkins build for &lt;code>my_website&lt;/code> that runs on all branches (using the multi-branch pipeline, as Wes explains in the course)&lt;/li>
&lt;li>Create a branch called &lt;code>broken&lt;/code> and add code that will break your cookbook&lt;/li>
&lt;li>Check it into the branch, and watch Jenkins tell you it&amp;rsquo;s broken!&lt;/li>
&lt;/ol>
&lt;h2 id="what-were-learning-5">What We&amp;rsquo;re Learning&lt;/h2>
&lt;p>We&amp;rsquo;re automatically providing the accountability people need to know that their software still works. It&amp;rsquo;s better to learn that &lt;em>as&lt;/em> you&amp;rsquo;re making the changes rather than when they get to production. So Jenkins helps us see how, when we change software over time, that software still meets our expectations. It reinforces the best practices for your team: you should run test kitchen before checking in changes. The safety imposed by Jenkins will keep you on the straight and narrow path!&lt;/p>
&lt;h2 id="resources-for-learning">Resources for Learning&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://www.pluralsight.com/courses/jenkins-2-getting-started">Getting Started with Jenkins 2&lt;/a>&lt;/li>
&lt;/ul>
&lt;h1 id="extra-credit">Extra Credit&lt;/h1>
&lt;p>I think if you do the above project, you&amp;rsquo;ll be well on your way to getting things working. Here are some other ideas, for extra credit:&lt;/p>
&lt;ul>
&lt;li>With &lt;a href="https://www.vaultproject.io/">Hashicorp Vault&lt;/a> store a secret and have your chef cookbook (using the vault gem) read the secret and write it to your web page&lt;/li>
&lt;li>Create a Jenkins pipeline that will deploy your terraform templates&lt;/li>
&lt;li>Instead of using Chef, use Docker (perhaps with Habitat) to deploy your application&lt;/li>
&lt;/ul>
&lt;h1 id="conclusion">Conclusion&lt;/h1>
&lt;p>Hopefully this project will give you the context to know the basics of automating infrastructure. With this basis under your belt, you&amp;rsquo;ll be able to make great progress in whatever situation you find yourself.&lt;/p></description></item><item><title>The Phoenix Project Book Review</title><link>https://hedge-ops.com/the-phoenix-project-book-review/</link><pubDate>Mon, 02 Feb 2015 08:00:14 +0000</pubDate><guid>https://hedge-ops.com/the-phoenix-project-book-review/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-the-phoenix-project-book-review.jpg" alt="Phoenix Project" />
&lt;/div>
&lt;p>As I&amp;rsquo;ve looked into devops more and more over the past few months, the book &lt;a href="http://amzn.to/1AinIdB">The Phoenix Project&lt;/a> has come up over and over. I finally bought it when Matt Stratton at chef basically insisted on it in &lt;a href="http://www.mattstratton.com/tech/devops">his very awesome reading list&lt;/a> to ramp yourself up on devops.&lt;/p>
&lt;p>I haven&amp;rsquo;t been into fiction very much, but over the summer I read &lt;a href="http://amzn.to/1zx9aT7">A Man in Full&lt;/a> as a means of integrating stoicism into my own philosophy. That book lit up my imagination and helped me absorb the stoic themes in a way that would be difficult had I just read an outline of stoicism. I was awakened to the reality of how fiction can transform your mind deeply by awakening all aspects of the mind during learning.&lt;/p>
&lt;p>So I was very excited to read the book. And the book did not disappoint in changing my outlook on my own career and what is possible for those around me. It taught me a few basic lessons that I believe will transform my behavior in the future:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Have a respect for the system.&lt;/strong> Up until I read this book I treated a inefficient system like it was garbage. Let&amp;rsquo;s get rid of the inefficiency! This is dumb! What I realized by reading the book is that in order for you to effectively and profitably change a system, you must have a respect and understanding of why it is the way it is. If you don&amp;rsquo;t know why it is this way, you can realize that it is an inefficient system, but you will not effectively change it.&lt;/li>
&lt;li>&lt;strong>&lt;a href="https://hedge-ops.com/measure-for-reality/">Measure, Measure, Measure&lt;/a>.&lt;/strong> The main character in the book has a great respect for measurement. People say you can&amp;rsquo;t manage what you don&amp;rsquo;t measure. I think that can be taken too far, but there is a reality in it: if I can&amp;rsquo;t measure the reality of the system, it will be very difficult for me to (1) convince people that a more efficient change is needed, and (2) know that the changes I am making are having their desired effect.&lt;/li>
&lt;li>&lt;strong>Take a Breath and Count to 2.&lt;/strong> One of the nice things about the book that taught me a lesson is when the main character interacts with various antagonists, who are obviously being reckless, dumb, and incendiary, the main character will take a breath and count to 2. Then respond. And when he responds, it&amp;rsquo;s with facts and an attitude of doing what&amp;rsquo;s best for everyone. I desperately want to exhibit this kind of tact and patience. I get so passionate about my ideas that I can forget to have patience, be calm, and move the ball forward.&lt;/li>
&lt;li>&lt;strong>Find the Bottleneck Constraint.&lt;/strong> In the book there is a legendary character named Brent. Brent can do everything. He can fix problems in seconds that everyone has spent days trying to understand. He knows why this server is the way it is, and the answer lies in activities from 2002. Brent has everyone asking him for everything and the business is at it&amp;rsquo;s knees due to Brent&amp;rsquo;s inability to clone himself into fifty other people. In the book, the main focus was on getting Brent isolated and his work properly documented, prioritized, and managed. Brent remained a hugely valuable member of the team, but they couldn&amp;rsquo;t grow until his workload was under control. And once Brent had his priorities under control, he was able to do some special things for the company.&lt;/li>
&lt;/ul>
&lt;p>I really enjoyed the Phoenix Project and recommend it to anyone wanting to lead change in their organization using lean principles. It reaches the reader in a way that a nonfiction book can&amp;rsquo;t: you can feel the tension. You drop the F-bombs right there with the reader. You feel the desperation as the core concepts come to life. And therefore when you face similar situations, you have a whole new world of awesome manufacturing theory available to you.&lt;/p>
&lt;p>This book was one of the best software-related books I&amp;rsquo;ve ever read. If you want to be a leader, please get a copy and read it. Then invite me to lunch and let&amp;rsquo;s talk about it; maybe we can change the world together.&lt;/p></description></item><item><title>Learning Chef Book Review</title><link>https://hedge-ops.com/learning-chef-book-review/</link><pubDate>Fri, 09 Jan 2015 08:00:12 +0000</pubDate><guid>https://hedge-ops.com/learning-chef-book-review/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-learning-chef-book-review.jpg" alt="Learning Chef Book Review" />
&lt;/div>
&lt;p>A couple of months ago I found myself drowning in the learning curve that was &lt;a href="http://chef.io">chef&lt;/a>. I had great support from them, but I&amp;rsquo;m the type of person who needs to know a technology in order to appropriately evaluate it. I could tell that chef was a nice technology, but I didn&amp;rsquo;t know how.&lt;/p>
&lt;p>I went through &lt;a href="https://learn.chef.io/">the tutorials&lt;/a> but they weren&amp;rsquo;t adequate for me to understand the solution. Then I found the book &lt;a href="http://amzn.to/1Ajqayd">Learning Chef&lt;/a>.&lt;/p>
&lt;p>Learning Chef is an excellent first step in understanding the chef universe in order to get started on the right foot with the tool. I absolutely loved the tutorial, incremental approach that &lt;a href="http://misheska.com/">the&lt;/a> &lt;a href="https://sethvargo.com/">authors&lt;/a> take to go from running a recipe on your own machine to running tests on locally available virtual machines.&lt;/p>
&lt;p>Which leads me to my other pleasant surprise of this book: it lays out the techniques you can use with chef in order to test what you&amp;rsquo;re doing so you know that it works. That is what separates chef from many other solutions I&amp;rsquo;ve seen: &lt;a href="http://kitchen.ci/">they bake testing into the process itself&lt;/a>. If you&amp;rsquo;re going to treat infrastructure as code then you &lt;em>have&lt;/em> to test it as a part of your deployment pipeline. Fortunately this introductory book doesn&amp;rsquo;t skimp on this core aspect of chef.&lt;/p>
&lt;p>The third great thing about this book is that it is very approachable to those of us who have built their careers programming in the Windows environment. Every command has a hint at what you would do on a windows box. This really increased my comfort level with learning chef by allowing me to learn it in &lt;em>my own&lt;/em> development environment.&lt;/p>
&lt;p>The book is not for people who want a quick, few hour understanding of chef to get up and running. For example if I bring a new team on board with Chef, I probably won&amp;rsquo;t hand them this book; I&amp;rsquo;ll probably do a couple of day class with them to teach them the basics. If they&amp;rsquo;re the type of person (like me) who wants to dig deeper though and learns by doing, this book is a fabulous step in becoming proficient at using chef.&lt;/p></description></item></channel></rss>