<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>teamcity on Michael Hedgpeth</title><link>https://hedge-ops.com/tags/teamcity/</link><description>Recent content in teamcity on Michael Hedgpeth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>MIT</copyright><lastBuildDate>Fri, 29 Apr 2016 08:01:34 +0000</lastBuildDate><atom:link href="https://hedge-ops.com/tags/teamcity/index.xml" rel="self" type="application/rss+xml"/><item><title>Promoting Cookbooks into a Private Chef Supermarket with TeamCity</title><link>https://hedge-ops.com/promoting-cookbooks-into-a-private-chef-supermarket-with-teamcity/</link><pubDate>Fri, 29 Apr 2016 08:01:34 +0000</pubDate><guid>https://hedge-ops.com/promoting-cookbooks-into-a-private-chef-supermarket-with-teamcity/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-promoting-cookbooks-into-a-private-chef-supermarket-with-teamcity.jpg" alt="Promoting Cookbooks" />
&lt;/div>
&lt;p>&lt;a href="http://hedge-ops.com/my-advice-for-chef-in-large-corporations/">We want the ability to control&lt;/a> which versions of which cookbooks we rely on and that those cookbooks are available to us even if the author removes them from GitHub. In fact with &lt;a href="http://www.theverge.com/2016/3/24/11300840/how-an-irate-developer-briefly-broke-javascript">the recent craziness on dependency management&lt;/a> and after listening to &lt;a href="https://www.arresteddevops.com/availability/">an episode on availability on Arrested DevOps,&lt;/a> I&amp;rsquo;m starting to think that this isn&amp;rsquo;t just for large organizations like mine.&lt;/p>
&lt;p>So to protect ourselves from that kind of craziness, we have created a &lt;a href="https://www.chef.io/blog/2015/12/31/a-supermarket-of-your-own-running-a-private-supermarket/">private chef supermarket&lt;/a> that we host all dependencies on. Then in our policyfiles, we specify that private supermarket as our default source for finding cookbooks.&lt;/p>
&lt;p>At first, to get us started, we manually uploaded the cookbooks we needed and got to working. Then as we scaled we got tired of people asking us to upload another version. On top of that we want to have a good, clean process for approving external cookbooks/code into our blessed environment. Here&amp;rsquo;s how we implemented it:&lt;/p>
&lt;h2 id="1-synchronize-github-with-internal-git-server">1: Synchronize GitHub with internal Git server&lt;/h2>
&lt;p>We have an internal, corporately blessed git server we use, so we needed to get what was in GitHub into that Git server. For each of the cookbooks, we create a TeamCity &lt;a href="https://confluence.jetbrains.com/display/TCD9/Build+Configuration">build configuration&lt;/a> (that&amp;rsquo;s based on a &lt;a href="https://confluence.jetbrains.com/display/TCD9/Build+Configuration+Template">template&lt;/a>) that does just this with a simple &lt;a href="https://confluence.jetbrains.com/display/TCD9/Command+Line">Command Line runner&lt;/a> (that runs in Windows only at the moment):&lt;/p>
&lt;pre class="lang:default decode:true ">mkdir %Repository Name%.git
git clone --mirror %Github Clone URL%
cd %Repository Name%.git
git remote add stash %Stash Clone URL%
git push --all stash
git push --tags stash&lt;/pre>
&lt;p>There are three variables that are &lt;a href="https://confluence.jetbrains.com/display/TCD9/Configuring+Build+Parameters">defined as parameters&lt;/a> here:&lt;/p>
&lt;ol>
&lt;li>Repository Name: the name of the git repository, like &lt;span class="lang:default decode:true crayon-inline ">chef-client&lt;/span>&lt;/li>
&lt;li>Github Clone URL: the URL to clone the git on GitHub, like &lt;span class="lang:default decode:true crayon-inline ">&lt;a href="https://github.com/chef-cookbooks/chef-client">https://github.com/chef-cookbooks/chef-client&lt;/a>&lt;/span>&lt;/li>
&lt;li>Stash URL: the URL to push the code to internally&lt;/li>
&lt;/ol>
&lt;p>I had to go into our internal Git server and create a repo with the same name as the GitHub one so something could be pushed.&lt;/p>
&lt;p>I then &lt;a href="https://confluence.jetbrains.com/display/TCD9/Configuring+Build+Triggers">schedule this to run every day&lt;/a>, and let it do its thing. If I got crazy I could make it run everytime there was a checkin on github, but the model doesn&amp;rsquo;t &lt;em>have&lt;/em> to have immediacy to it. My repository internally will be reasonably up to date.&lt;/p>
&lt;h2 id="2-create-an-internally-approved-branch-based-on-a-tag">2: Create an internally approved branch based on a tag&lt;/h2>
&lt;p>The next thing we do is create a new branch on our internal git server that outlines what we have code reviewed and have approved to be a part of our infrastructure. During the first setup, we first clone the repo on our local machine with the internal git server:&lt;/p>
&lt;pre class="lang:default decode:true ">git clone http://mycompanygitserver.com/chef-client.git&lt;/pre>
&lt;p>Then we simply run these commands:&lt;/p>
&lt;pre class="lang:default decode:true ">git checkout -b mycompany-approved v4.3.2
git push origin mycompany-approved&lt;/pre>
&lt;p>This creates our &amp;ldquo;safe&amp;rdquo; branch, from which our promotion can occur.&lt;/p>
&lt;h2 id="3-run-cookbook-build-just-as-with-other-cookbooks">3: Run cookbook build just as with other cookbooks&lt;/h2>
&lt;p>The cookbook build will run as I outlined in &lt;a href="http://hedge-ops.com/chef-cookbook-builds-in-teamcity/">a different post&lt;/a>. The only difference is the VCS Root that I pull will be off of the &lt;span class="lang:default decode:true crayon-inline ">mycompany-approved&lt;/span>  branch created above.&lt;/p>
&lt;h2 id="4-promote-cookbook-to-supermarket">4: Promote cookbook to supermarket&lt;/h2>
&lt;p>Then I promote a cookbook to the supermarket using a TeamCity template that I use for all cookbook promotions, which is basically this command:&lt;/p>
&lt;pre class="lang:default decode:true ">knife supermarket share %cookbook_name% "Other" -o .&lt;/pre>
&lt;p>I had to ensure that the &lt;span class="lang:default decode:true crayon-inline ">knife-supermarket&lt;/span>  gem was installed on my build server (of course, configured by chef as well). Also I parameterized the cookbook name so this could be inside of a template that can be reused everywhere.&lt;/p>
&lt;p>The cookbook also has a &lt;a href="https://confluence.jetbrains.com/display/TCD9/Snapshot+Dependencies">snapshot dependency&lt;/a> to the cookbook build above, ensuring that it is only released to our supermarket when it passes the build. That keeps everyone honest.&lt;/p>
&lt;h2 id="5-merge-into-approved-branch-as-people-request">5: Merge into approved branch as people request&lt;/h2>
&lt;p>People will still request that we merge into the approved branch, which is locked down so that a smaller team can approve of the changes. We can use a pull request model to review and audit how this happens.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>Doing it this way gave us the most control over which changes go into our infrastructure. It avoids the public supermarket alltogether, because we found that the packages posted on that server cannot be pushed to another supermarket. Even if that problem were fixed, this way is superior because it gives us the ability to code review and audit every dependency we have going into our system.&lt;/p></description></item><item><title>Chef Cookbook Builds in TeamCity</title><link>https://hedge-ops.com/chef-cookbook-builds-in-teamcity/</link><pubDate>Fri, 15 Apr 2016 08:00:50 +0000</pubDate><guid>https://hedge-ops.com/chef-cookbook-builds-in-teamcity/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-chef-cookbook-builds-in-teamcity.jpg" alt="Chef Cookbook Builds in TeamCity" />
&lt;/div>
&lt;p>As more and more teams are &lt;a href="http://hedge-ops.com/my-advice-for-chef-in-large-corporations/">coming on board with Chef&lt;/a>, I&amp;rsquo;ve began to standardize our pipeline and ensure that everyone meets quality gates for the infrastructure they are creating. This started with finally figuring out how to get &lt;a href="http://hedge-ops.com/test-kitchen-required-not-optional/">Test Kitchen working with Windows&lt;/a>, then quickly migrated to getting it running in &lt;a href="http://hedge-ops.com/christmas-with-russians/">TeamCity&lt;/a>. Our entire division uses TeamCity for configuration management, so it&amp;rsquo;s something that I needed to plan out carefully in order to make the Chef pipeline &lt;em>feel&lt;/em> like it&amp;rsquo;s a part of a team&amp;rsquo;s normal build process.&lt;/p>
&lt;h2 id="project-structure">Project Structure&lt;/h2>
&lt;p>With this in mind, we created a** Chef** &lt;a href="https://confluence.jetbrains.com/display/TCD9/Creating+and+Editing+Projects">subproject&lt;/a> _inside_ of each team&amp;rsquo;s _existing_ project. We want them to have ownership when Chef infrastructure breaks and to take action on problems, just as if the problem happened in their own software build.&lt;/p>
&lt;p>We then created a** Chef Cookbook** &lt;a href="https://confluence.jetbrains.com/display/TCD9/Build+Configuration+Template">build template&lt;/a> at the &lt;Root Project> level that all cookbooks can use for their own builds. This template defines a cookbook parameter that enables the build steps below to know where the cookbook is in source.&lt;/p>
&lt;h2 id="version-control-settings">Version Control Settings&lt;/h2>
&lt;p>We&amp;rsquo;re not really sure about how we approach testing at the moment when it comes to dependencies. If a cookbook is very young or if we are testing a lot of things at once, we might want to use relative path dependencies to other cookbooks. Or we might want to use data bags at some level. So we&amp;rsquo;ve decided on the build agent itself to mimic a chef repo and then test it that way. We do this &lt;a href="https://confluence.jetbrains.com/display/TCD9/Build+Checkout+Directory#BuildCheckoutDirectory-Customcheckoutdirectory">through a checkout rule&lt;/a>, like this:&lt;/p>
&lt;pre>&lt;code>+:.=&amp;amp;gt;cookbooks/contributors
&lt;/code>&lt;/pre>&lt;p>This means that the contributors cookbook will go to the cookbooks/contributors repo relative to build working directory.&lt;/p>
&lt;h2 id="build-steps">Build Steps&lt;/h2>
&lt;h3 id="1-run-foodcritic">&lt;strong>1. Run Foodcritic&lt;/strong>&lt;/h3>
&lt;p>We want to do Chef liniting first before we get into further testing, so we run &lt;a href="http://www.foodcritic.io/">foodcritic&lt;/a>. This is done simply by creating a &lt;a href="https://confluence.jetbrains.com/display/TCD9/Command+Line">Command Line runner&lt;/a> with the foodcritic command:&lt;/p>
&lt;p>&lt;img src="https://hedge-ops.com/images/post-assets/2016-04-15-chef-cookbook-builds-in-teamcity/run-foodcritic-1.png" alt="Run Foodcritic">&lt;/p>
&lt;h3 id="2-run-rubocop">&lt;strong>2. Run Rubocop&lt;/strong>&lt;/h3>
&lt;p>Once foodcritic runs, we want to finish our cookbook linting with &lt;a href="http://batsov.com/rubocop/">rubocop&lt;/a>:&lt;/p>
&lt;p>&lt;img src="https://hedge-ops.com/images/post-assets/2016-04-15-chef-cookbook-builds-in-teamcity/run-rubocop.png" alt="Run Rubocop">&lt;/p>
&lt;h3 id="3-run-cookbook-unit-tests">&lt;strong>3. Run Cookbook Unit Tests&lt;/strong>&lt;/h3>
&lt;p>I&amp;rsquo;m not a huge fan of &lt;a href="https://docs.chef.io/chefspec.html">ChefSpec&lt;/a> because I believe they mock too much out and end up not adding a lot of value. But I do think having at least one there that ensures that your code will converge is immensely helpful. It&amp;rsquo;s much better waiting the few seconds to ensure that code converges than the few minutes to wait for kitchen to tell you the same thing. So I put the step here:&lt;/p>
&lt;p>&lt;img src="https://hedge-ops.com/images/post-assets/2016-04-15-chef-cookbook-builds-in-teamcity/run-chef-unit-tests.png" alt="Run Chef Unit Tests">&lt;/p>
&lt;p>&lt;em>Update: actually just before this published, I removed this. The Chef Spec unit tests required too much ruby expertise to be helpful. Plus people are working well with kitchen and learn to rely on it instead. So as of yesterday, this step was removed.&lt;/em>&lt;/p>
&lt;h3 id="4-run-test-kitchen">&lt;strong>4.&lt;/strong> &lt;strong>Run Test Kitchen&lt;/strong>&lt;/h3>
&lt;p>And now for the magic! I need to &lt;a href="http://hedge-ops.com/test-kitchen-required-not-optional/">run Test Kitchen&lt;/a>. If I&amp;rsquo;m using vagrant, I need to have a physical build agent to do this on. &lt;a href="http://hedge-ops.com/tutorial-for-test-kitchen-with-azure/">If I&amp;rsquo;m running azure&lt;/a>, I need to have some credentials set up on the build agent. All of that configuration is handled through chef itself, so at this point all I need to do is run the command itself:&lt;/p>
&lt;p>&lt;img src="https://hedge-ops.com/images/post-assets/2016-04-15-chef-cookbook-builds-in-teamcity/run-kitchen-test.png" alt="Run Kitchen Test">&lt;/p>
&lt;p>Kitchen test will do a create, converge, and verify. It runs through the whole process. And I&amp;rsquo;ve tested that if it fails, the build will fail.&lt;/p>
&lt;h3 id="5-kitchen-destroy">&lt;strong>5. Kitchen Destroy&lt;/strong>&lt;/h3>
&lt;p>If the above test fails, it&amp;rsquo;s important to not keep the virtual machine running. This is especially true if I&amp;rsquo;m using the azure runner. So at the end I&amp;rsquo;ll call kitchen destroy, and &lt;em>always&lt;/em> call it, even if the previous command failed:&lt;/p>
&lt;p>&lt;img src="https://hedge-ops.com/images/post-assets/2016-04-15-chef-cookbook-builds-in-teamcity/run-kitchen-destroy.png" alt="Run Kitchen Destroy">&lt;/p>
&lt;h2 id="build-agent-setup">Build Agent Setup&lt;/h2>
&lt;p>As I mentioned earlier, our build agents are set up through Chef itself, so configuration of them is easy. Since we are creating our Chef Projects inside of the product&amp;rsquo;s projects, we don&amp;rsquo;t want to mix their build agents with the chef ones. We keep them separated because we let each team have their own build agents that they manage. To solve for the mix, we add the** Chef** subproject set up above to our own Chef build &lt;a href="https://confluence.jetbrains.com/display/TCD9/Agent+Pools">agent pool&lt;/a>. Then in our template, we add a &lt;a href="https://confluence.jetbrains.com/display/TCD9/Agent+Requirements">build agent requirement&lt;/a>:&lt;/p>
&lt;p>&lt;img src="https://hedge-ops.com/images/post-assets/2016-04-15-chef-cookbook-builds-in-teamcity/chef-cookbook-requirement.png" alt="Chef Cookbook Requirement">&lt;/p>
&lt;p>In our recipe for the build agent, we set this environment variable, so this limits our cookbook builds to only run on build agents on which our chef recipe has run.&lt;/p>
&lt;h2 id="triggering">Triggering&lt;/h2>
&lt;p>Finally, we want to trigger this cookbook build whenever something in the cookbook is checked in. We do this through adding a &lt;a href="https://confluence.jetbrains.com/display/TCD9/Configuring+VCS+Triggers">VCS trigger&lt;/a> with the default settings to the template.&lt;/p>
&lt;h2 id="conclusion">Conclusion&lt;/h2>
&lt;p>With the template in place, it takes about ten minutes to add a team&amp;rsquo;s cookbook to be fully tested and built within their own environment. It feels very much like a software build, which is fantastic for everyone because it reminds us that the infrastructure code we are creating is like any other code; it should be subject to automation just like the rest.&lt;/p></description></item><item><title>The Inferior "Right" Way</title><link>https://hedge-ops.com/the-inferior-right-way/</link><pubDate>Fri, 20 Nov 2015 08:00:20 +0000</pubDate><guid>https://hedge-ops.com/the-inferior-right-way/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-the-inferior-right-way.jpg" alt="Inferior Right Way" />
&lt;/div>
&lt;p>I&amp;rsquo;ve spent much of my career trying to find roadblocks to technical and organizational success. This passion leads me to great tools like &lt;a href="https://hedge-ops.com/christmas-with-russians/">TeamCity&lt;/a> and of &lt;a href="https://hedge-ops.com/intrinsic-motivators-leading-to-chef/">Chef&lt;/a>. My success in leveraging tools for organizational success leads me to be opinionated about what tools we should be using and how we should be doing things in our organization.&lt;/p>
&lt;p>It is so easily get locked into the &amp;ldquo;right&amp;rdquo; solution that would &amp;ldquo;solve all of our problems.&amp;rdquo; Early on that worked just fine for me, but over the years I&amp;rsquo;ve changed my approach.&lt;/p>
&lt;p>As I&amp;rsquo;ve grown with our organization from a newly acquired startup to a mid-sized company to a large multinational, I&amp;rsquo;ve realized that doing the &amp;ldquo;right&amp;rdquo; thing &lt;a href="https://hedge-ops.com/alignment/">without alignment&lt;/a> with the key stakeholders is the wrong thing. It&amp;rsquo;s not enough to read a book and evaluate a tool like chef to see that it will solve our problems. It&amp;rsquo;s not even enough to talk developers into using it and seeing its value. One must do serious work to analyze the state of the business, find the pain points that are either preventing revenue or creating unnecessary cost, and then set a strategy for addressing those things.&lt;/p>
&lt;p>After that, one finds the &amp;ldquo;right&amp;rdquo; way. After that, one finds the &amp;ldquo;tool&amp;rdquo; that they&amp;rsquo;ll use to solve the problem.&lt;/p>
&lt;p>Anyone claiming to be the &amp;ldquo;right&amp;rdquo; tool or solution before that analysis happens is likely wasting your time.&lt;/p></description></item><item><title>Generosity with the Unexpected</title><link>https://hedge-ops.com/generosity-with-the-unexpected/</link><pubDate>Wed, 04 Jun 2014 08:00:59 +0000</pubDate><guid>https://hedge-ops.com/generosity-with-the-unexpected/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-generosity-with-the-unexpected.jpg" alt="Generosity with the Unexpected" />
&lt;/div>
&lt;p>Every year we sit down and create a specific set of goals for my projects. The &lt;a href="https://hedge-ops.com/measure-for-reality/">goals are always aggressive&lt;/a>, and every year we wonder to ourselves how we are going to do it. Most years we spend the first few months trying to come up with a strategy for even making the goals possible. This is by no means an easy endeavor. And &lt;a href="https://hedge-ops.com/achievable-contentment/">achieving the goals&lt;/a> on this list is extremely important to me. But it doesn&amp;rsquo;t tell the whole story.&lt;/p>
&lt;p>What is not on the list is just as important to my future as what is on the list.&lt;/p>
&lt;p>For the past five years &amp;ldquo;Getting a team set up on &lt;a href="http://www.jetbrains.com/teamcity/">TeamCity&lt;/a> has never been an explicit goal. Neither has &amp;ldquo;introduce and administrate &lt;a href="http://www.jetbrains.com/youtrack/">YouTrack&lt;/a> to increase the maturity and efficiencies of teams.&amp;rdquo; Or &amp;ldquo;introduce &lt;a href="http://git-scm.com/">git&lt;/a> as a superior version control alternative to TFS and Subversion&amp;rdquo;. But to me, these things that don&amp;rsquo;t make the list are major contributors to my success because they foster an attitude of generosity.&lt;/p>
&lt;p>I don&amp;rsquo;t believe success happens without generosity. Plans never explicitly state &amp;ldquo;be generous to others and solve problems.&amp;rdquo; But those who follow this path end up being lifted up by those whom they served, being served in return. I think this is a secret to my success: &lt;a href="https://hedge-ops.com/christmas-with-russians/">serve others generously&lt;/a>, which builds a community of generosity of which I am also a recipient.&lt;/p>
&lt;p>In contrast, the one who is stingy and focuses only on that which will advance one&amp;rsquo;s own intersts will end up hitting a ceiling of productivity. At some point those around her are alienated, aren&amp;rsquo;t growing enough to contribute at higher levels, or aren&amp;rsquo;t properly engaged in the vision of growth that is required for success to be achieved.&lt;/p>
&lt;p>I have a standing invitation for anyone to put thirty minutes on my calendar to get Continuous Integration (TeamCity), issue tracking (YouTrack), or distributed version control (git) set up on their project. Even though it isn&amp;rsquo;t on the list of my explicit goals, it is my pleasure to make the world a better place, and, in turn, it indirectly helps me reach my own goals.&lt;/p>
&lt;p>In what ways has generosity led to success for you?&lt;/p></description></item><item><title>Christmas with Russians</title><link>https://hedge-ops.com/christmas-with-russians/</link><pubDate>Mon, 26 May 2014 08:00:28 +0000</pubDate><guid>https://hedge-ops.com/christmas-with-russians/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-christmas-with-russians" alt="Christmas" />
&lt;/div>
&lt;p>It was Christmas 2008, and the world was going to end. We didn&amp;rsquo;t know if there would be an economy or even civilization. And I had two weeks of vacation to end the year. I had an 18 month old who was mostly occupying himself with Christmas toys, and my wife was two months away from having my second child. I didn&amp;rsquo;t really want to take the vacation, but the policy at the time was &amp;ldquo;use it or lose it&amp;rdquo;, so I took it.&lt;/p>
&lt;p>I could have done anything with those two weeks.&lt;/p>
&lt;p>I chose to set up &lt;a href="http://martinfowler.com/articles/continuousIntegration.html">Continous Integration&lt;/a> for one of our largest products through &lt;a href="http://www.jetbrains.com/teamcity/">TeamCity&lt;/a>.&lt;/p>
&lt;p>This was something I was passionate about. I had &lt;a href="http://www.amazon.com/gp/product/B0026772IS/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B0026772IS&amp;amp;linkCode=as2&amp;amp;tag=hedgeopscom-20&amp;amp;linkId=RJ6US3SXFLCWDTR5">read the literature&lt;/a> on how transformative Continuous Integration had been to organizations. This product was built twice a day by a homeade tool called bmcon.exe and some batch files. If the build broke, dozens of people stopped everything to try to get it working, with no clear feedback mechanism for knowing what went wrong, who did it, and whether it was being worked on.&lt;/p>
&lt;p>It was my moral duty to fix this.&lt;/p>
&lt;p>And it so happened that those working on TeamCity were going to take their Christmas holiday&amp;hellip;&lt;a href="http://en.wikipedia.org/wiki/Christmas_in_Russia">on January 7&lt;/a>. They were Russian. So I took it upon myself to monitor the email and get the build working over the Christmas holidays. I remember on Christmas day &lt;a href="http://youtrack.jetbrains.com/issue/TW-6471">I was conversing with&lt;/a> &lt;a href="http://de.linkedin.com/in/jonnyzzz">Eugene Pentrenko&lt;/a> across the world about how to deal with the complexities of TFS pulling thousands of files and then building them*.&lt;/p>
&lt;p>Years later, almost all of our products build with TeamCity, and we have thousands of integration tests and tens of thousands unit tests that run on our 100+ build agents to make it happen. It is central to everything we do. And it all started one Christmas years ago when I had a &amp;ldquo;moral duty&amp;rdquo; to do something.&lt;/p>
&lt;p>In the book &amp;ldquo;&lt;a href="http://www.amazon.com/gp/product/B008KPM424/ref=as_li_qf_sp_asin_il_tl?ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=B008KPM424&amp;amp;linkCode=as2&amp;amp;tag=hedgeopscom-20&amp;amp;linkId=52YQPMBZ7Z4IMUKU">Selling with Noble Purpose&lt;/a>&amp;rdquo;, &lt;a href="http://www.mcleodandmore.com/what-is-selling-with-noble-purpose/">Lisa McLeod&lt;/a> leads the reader through an exercise where the reader thinks about situations where one makes a difference with customers, in a different way than other people, while loving what they are doing. When I went through this exercise I was reminded of this story. Through the exercise I found my noble purpose:&lt;/p>
&lt;p>&lt;strong>I share tools and insight for success&lt;/strong>&lt;/p>
&lt;p>This is what truly excites me, and why this blog exists. I want to share the tools and insights I&amp;rsquo;ve found to succeed. I want to help those who have given me tools and insights that have made me more effective by spreading them to others. And I want to properly define success so I can make sure to follow the path that will lead me there.&lt;/p>
&lt;p>In the next few posts, I&amp;rsquo;ll talk about key elements of &lt;em>true&lt;/em> success. Success is one of those things that seems easy to see in others, but never seems recognizable in ourselves. I think I&amp;rsquo;ve found a few reasons why this is.&lt;/p>
&lt;p>_* You can&amp;rsquo;t see it in the issue I link to above but Eugene was emailing me and went above and beyond, after his normal hours, to resolve the issue._&lt;/p></description></item></channel></rss>