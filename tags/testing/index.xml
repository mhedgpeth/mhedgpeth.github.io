<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>testing on Michael Hedgpeth</title><link>https://hedge-ops.com/tags/testing/</link><description>Recent content in testing on Michael Hedgpeth</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>MIT</copyright><lastBuildDate>Wed, 02 Jul 2014 08:12:45 +0000</lastBuildDate><atom:link href="https://hedge-ops.com/tags/testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Embrace Difficulty</title><link>https://hedge-ops.com/embrace-difficulty/</link><pubDate>Wed, 02 Jul 2014 08:12:45 +0000</pubDate><guid>https://hedge-ops.com/embrace-difficulty/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-embrace-difficulty.jpg" alt="Embrace Difficulty" />
&lt;/div>
&lt;p>It was an impossible project and I was scared. The fact that &lt;a href="https://hedge-ops.com/christmas-with-russians/">the world was ending&lt;/a> was the least of my concerns. We have software that is so flexible and configurable that it was impossible to fully test all the combinations of options our customers could run. My leadership at the time asked us to mitigate this by recording everything that happened at a restaurant and playing it back it back internally on prereleased software to make sure everything behaved the same.&lt;/p>
&lt;p>I can&amp;rsquo;t overstate how I felt: this problem scared the crap out of me. So much could go wrong, and so many issues to figure out. How would I get the software started? How would I know when/if the simulation was running correctly? What about all the other automation projects I had heard about over the years that had been cancelled due to lack of results? Would this project (and my career with it) be the next one thrown on the scrap heap when management realizes how impossible it is?&lt;/p>
&lt;p>I had to step back, step away from my fear, and think of a good strategy. We were facing a difficult problem. The process we would come up with was likely to fail. A lot. Instead of running &lt;em>away&lt;/em> from that failure, we needed to embrace it. We needed to welcome it with open arms. Because &lt;strong>if we didn&amp;rsquo;t face the failure head on, we would never get past it, and we would fail.&lt;/strong>&lt;/p>
&lt;p>So we created a system where we ran any automation we had &lt;em>every day&lt;/em>. In fact, this is how we do it today, with over 150 restaurants running in a virtual environment and over 4,000 small scenarios. We do it every night. Do we have to do it every night? Technically no. But we embrace the difficulty of it by doing it every night so we get quick feedback of the problems and keep it on track.&lt;/p>
&lt;p>People still argue with me over whether we &lt;em>have&lt;/em> to run this every night. I&amp;rsquo;m fine with that; I know it seems silly at times. But I think it&amp;rsquo;s key to our success: &lt;strong>we embrace the difficulty by doing difficult things all the time, so we can learn how to deal with them and make them not difficult anymore.&lt;/strong>&lt;/p>
&lt;p>Here are a few other examples of embracing the difficulty in a system:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>When&lt;/th>
&lt;th>Embrace Difficulty By&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Doing Laundry&lt;/td>
&lt;td>Doing it every day&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Budgeting&lt;/td>
&lt;td>Starting every month and facing reality&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blogging&lt;/td>
&lt;td>Keeping a month ahead and posting at a regular pace&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Learning to Cook&lt;/td>
&lt;td>Cooking a regular meal on a day of a week&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keeping the Family Close&lt;/td>
&lt;td>Eating dinner together every night&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>What have you avoided that you need to embrace in order to overcome it?&lt;/p></description></item><item><title>Safety Net</title><link>https://hedge-ops.com/safety-net/</link><pubDate>Fri, 06 Jun 2014 08:00:33 +0000</pubDate><guid>https://hedge-ops.com/safety-net/</guid><description>&lt;div class="full-width">
&lt;img src="https://hedge-ops.com/images/feature-safety-net.jpg" alt="Failure Safety Net" />
&lt;/div>
&lt;p>Late last year I began seriously working on improving how we deliver updates to our software to restaurants. One of the most interesting parts about my job is how many aspects of technology become incredibly difficult when you have a chef twenty feet away instead of a data center technician in a lab coat. Updates are no exception: the operation of the restaurant itself is at stake and we must get it right.&lt;/p>
&lt;p>So how do you improve something like that? Believe me, this was something that was keeping me up at night. The problem is the huge amount of risk involved in anything going wrong in the restaurant operations, but at the same time the huge operational benefit improving it.&lt;/p>
&lt;p>The insight we found was that &lt;em>before making a change that has risk, build a safety net to ensure that the change will have the desired effect&lt;/em>. &lt;strong>Build quality into the system, and you&amp;rsquo;ll be able to make the needed changes to the system.&lt;/strong> Otherwise, you&amp;rsquo;re dead when the first problem hits and you&amp;rsquo;ll never recover.&lt;/p>
&lt;p>This insight relates to so many areas of life and business:&lt;/p>
&lt;div class="table-responsive">
&lt;table style="width:100%; " class="table" border="0">
&lt;tr>
&lt;th >
When doing
&lt;/th>
&lt;pre>&lt;code> &amp;lt;th &amp;gt;
create safety with
&amp;lt;/th&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
Software development
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
automated unit and integration tests
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A budget
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
&amp;lt;a href=&amp;quot;http://www.youneedabudget.com/method/rule-four&amp;quot; target=&amp;quot;_blank&amp;quot;&amp;gt;living on last month's income&amp;lt;/a&amp;gt;
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A healthy marriage
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
going on a date and having fun together
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A college class
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
a study group
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&amp;lt;tr&amp;gt;
&amp;lt;td &amp;gt;
A business idea
&amp;lt;/td&amp;gt;
&amp;lt;td &amp;gt;
seeing if it can be profitable on the side
&amp;lt;/td&amp;gt;
&amp;lt;/tr&amp;gt;
&lt;/code>&lt;/pre>
&lt;/table>
&lt;/div>
&lt;p>A safety net is a critical aspect of any system I create today. The bigger the risk involved, the more I strive to include saftey in the solution we create.&lt;/p>
&lt;p>What safety nets have you created in your solutions? Have you ever created &lt;em>too much&lt;/em> of a safety net?&lt;/p></description></item></channel></rss>